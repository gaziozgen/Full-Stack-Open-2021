{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Persons","filteredList","deletePerson","map","person","i","name","number","onClick","Filter","filter","handleFilterChange","value","onChange","PersonForm","props","onSubmit","addPerson","newName","handlePersonChange","newNumber","handleNumberChange","type","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","errorMessage","setErrorMessage","useEffect","personService","includes","sendNotification","text","bool","setTimeout","event","target","preventDefault","personObject","found","find","window","confirm","console","log","catch","err","concat","error","n","e","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd0bf3a0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = ({ filteredList, deletePerson }) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Numbers</h2>\r\n            <ul>\r\n                {filteredList.map((person, i) =>\r\n                    <li key={i} >{person.name} {person.number} <button onClick={() => deletePerson(person)}>delete</button></li>\r\n                    \r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = ({ filter, handleFilterChange }) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                filter shown with <input\r\n                    value={filter}\r\n                    onChange={handleFilterChange} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>add a new</h2>\r\n            <form onSubmit={props.addPerson}>\r\n                <div>\r\n                    name:<input\r\n                        value={props.newName}\r\n                        onChange={props.handlePersonChange} />\r\n                </div>\r\n                <div>\r\n                    number: <input\r\n                        value={props.newNumber}\r\n                        onChange={props.handleNumberChange} />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message[0] === null) {\r\n        return null\r\n    }\r\n    if (message[1]) {\r\n        return (\r\n            <div className=\"success\">\r\n                {message[0]}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"error\">\r\n                {message[0]}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletion = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { getAll, create, update, deletion }","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Notification from './components/Notification';\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState([null, true])\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response)\n      })\n  }, [])\n\n  const filteredList = persons.filter(person => {\n    return person.name.includes(filter)\n  })\n\n  const sendNotification = (text, bool) => {\n    setErrorMessage([text, bool])\n    setTimeout(() => {\n      setErrorMessage([null, true])\n    }, 5000)\n  }\n\n  const alreadyDeleted = () => {\n    \n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    const found = persons.find(person => person.name === newName);\n\n    if (found) {\n      if (window.confirm(`${found.name} is already added to phonebook, replace the old number with a new one?`)) {\n        console.log(`update ${found.id}`)\n        personService\n          .update(found.id, personObject)\n          .then(response => {\n\n            if (response != null) {\n              setPersons(persons.map(person => (person.id !== found.id) ? person : response))\n              sendNotification(`Updated ${found.name}`, true)\n              setNewName('')\n              setNewNumber('')\n            }\n            else {\n              sendNotification(`Information of ${found.name} has already been removed from server`, false)\n              setPersons(persons.filter(person => person.id !== found.id))\n            }\n          }).catch(err => {\n            sendNotification(`Information of ${found.name} has already been removed from server`, false)\n            setPersons(persons.filter(person => person.id !== found.id))\n          })\n      }\n    } else {\n      personService\n        .create(personObject)\n        .then(response => {\n          setPersons(persons.concat(response))\n          sendNotification(`Added ${response.name}`, true)\n          setNewName('')\n          setNewNumber('')\n        }).catch(error => {\n          sendNotification(error.response.data.error, false)\n        });\n    }\n  }\n\n  const deletePerson = person => {\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      console.log(`delete ${person.id}`)\n      personService.deletion(person.id)\n        .then(() => {\n          setPersons(persons.filter(n => n.id !== person.id))\n        })\n        .catch((e) => {\n          sendNotification(e.response.data.error, false)\n        })\n    }\n  }\n\n  const handlePersonChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <Filter\n        filter={filter}\n        handleFilterChange={handleFilterChange}\n      />\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handlePersonChange={handlePersonChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <Persons filteredList={filteredList} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}